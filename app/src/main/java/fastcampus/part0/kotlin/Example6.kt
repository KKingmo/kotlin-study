/**
 * 반복문
 */
package fastcampus.part0.kotlin

fun main() {
    /**
     * 코틀린에서 'for' 반복문은 'in' 키워드와 함께 범위(range)를 사용하여 작성합니다.
     * 아래의 예시에서는 1부터 10까지의 숫자를 반복하여 출력합니다.
     * ".." 연산자를 사용하여 범위를 지정합니다.
     */
    for (i in 1..10) {
        print(i)
        print(".")
    }
    println()

    /**
     * 'IntRange'는 코틀린에서 정수 범위를 표현하는 클래스입니다.
     * 'IntRange(start, endInclusive)' 형태로 사용하여 시작과 끝 값을 지정할 수 있습니다.
     * 아래의 예시에서는 1부터 10까지의 숫자를 반복하여 출력합니다.
     */
    for (i in IntRange(1, 10)) {
        print(i)
        print(".")
    }
    println()

    /**
     * 'until' 키워드는 범위의 끝 값을 제외하는 범위를 생성합니다.
     * 아래의 예시에서는 1부터 9까지의 숫자(10은 제외)를 반복하여 출력합니다.
     */
    for (i in 1 until 10) {
        print(i)
        print(".")
    }
    println()

    /**
     * 'step' 키워드는 반복문에서 일정 간격으로 요소를 건너뛰며 반복할 수 있게 합니다.
     * 아래의 예시에서는 1부터 10까지의 숫자 중, 2씩 건너뛰며 숫자를 출력합니다.
     */
    for (i in 1..10 step (2)) {
        print(i)
        print(".")
    }
    println()

    /**
     * 'downTo' 키워드는 높은 값에서 낮은 값으로 내려가며 반복을 수행합니다.
     * 아래의 예시에서는 10부터 1까지의 숫자를 반복하여 출력합니다.
     */
    for (i in 10 downTo 1) {
        print(i)
        print(".")
    }
    println()


    /**
     * 'downTo'와 'step' 키워드를 함께 사용하면, 높은 값에서 낮은 값으로 내려가며 일정 간격으로 요소를 건너뛰어 반복을 수행할 수 있습니다.
     * 아래의 예시에서는 10부터 1까지 2씩 감소하며 숫자를 출력합니다. 이를 통해 짝수만 출력됩니다.
     */
    for (i in 10 downTo 1 step (2)) {
        print(i)
        print(".")
    }
    println()

    /**
     * 'while'문은 조건이 참인 동안 반복문 내의 코드를 실행합니다.
     * 아래의 예시에서는 'c' 변수의 값이 11보다 작은 동안, 'c'의 값을 출력하고, 'c'의 값을 1씩 증가시킵니다.
     * 'while'문은 조건을 먼저 검사하므로, 조건이 처음부터 거짓인 경우 반복문 내의 코드는 한 번도 실행되지 않습니다.
     */
    var c = 1
    while (c < 11) {
        print(c)
        print(".")
        c++
    }
}